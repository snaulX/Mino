/**
* Library - standart.
* Have all standart types and methods and fields for base work.
* Author - snaulX
*/

// Types
typealias void; //compiler automatically find other type with this name and copy to new type
typealias bool = Boolean;
typealias byte;
typealias short;
typealias int;
typealias float;
typealias long;
typealias double;
typealias char;
typealias string = String;

// Functions
expect funcalias print;
expect funcalias println;
expect funcalias sleep;
expect fun readln(); //JVM haven`t static method for read from console
expect fun readKey();
expect fun int readInt();
expect fun double random();

// Realization
#if DOTNET
  use System;
  actual funcalias print = Console.Write;
  actual funcalias println = Console.WriteLine;
  actual funcalias sleep = System.Threading.Thread.Sleep;
  actual funcalias readln = Console.ReadLine;
  actual funcalias readKey = Console.ReadKey(); //alias only one of overload methods in Console.ReadKey
  actual fun int readInt() => Int32.Parse(Console.ReadLine());
#elif JVM
  use java.lang;
  use java.util;
  private final var Scanner sc = new Scanner(System.in);
  actual funcalias print = System.out.print;
  actual funcalias println = System.out.println;
  actual fun readln() -> sc.nextLine();
  actual funcalias sleep = Thread.sleep;
  actual fun int readInt() => sc.nextInt();
  actual funcalias random = Math.random;
#elif LLVM
  include Mino.dll;
  use Mino.Std;
#endif
