<tokens>
	<import_keyword>import</import_keyword>
	<use_keyword>use</use_keyword>
	<lib_keyword>lib</lib_keyword>
	<directive_start>#</directive_start>
	<annotation_start>@</annotation_start>
	<annotation_end></annotation_end>
	<class_keyword>class</class_keyword>
	<variable_keyword>var</variable_keyword>
	<const_keyword>const</const_keyword>
	<public_keyword>public</public_keyword>
	<private_keyword>private</private_keyword>
	<protected_keyword>protected</protected_keyword>
	<override_keyword>override</override_keyword>
	<sealed_keyword>sealed</sealed_keyword>
	<typeof_keyword>typeof</typeof_keyword>
	<is_keyword>is</is_keyword>
	<function_keyword>fun</function_keyword>
	<interface_keyword>interface</interface_keyword>
	<enum_keyword>enum</enum_keyword>
	<string_char>"</string_char>
	<char_char>'</char_char>
	<typealias_keyword>typealias</typealias_keyword>
	<include_keyword>include</include_keyword>
	<do_keyword>do</do_keyword>
	<while_keyword>while</while_keyword>
	<with_keyword>with</with_keyword>
	<for_keyword>for</for_keyword>
	<foreach_keyword>foreach</foreach_keyword>
	<if_keyword>if</if_keyword>
	<else_keyword>else</else_keyword>
	<switch_keyword>switch</switch_keyword>
	<case_keyword>case</case_keyword>
	<default_keyword>default</default_keyword>
	<break_keyword>break</break_keyword>
	<continue_keyword>continue</continue_keyword>
	<end_expression>;</end_expression>
	<block_start>{</block_start>
	<block_end>}</block_end>
	<array_start>[</array_start>
	<array_end>]</array_end>
	<statement_start>(</statement_start>
	<statement_end>)</statement_end>
	<funcalias_keyword>funcalias</funcalias_keyword>
	<try_keyword>try</try_keyword>
	<catch_keyword>catch</catch_keyword>
	<single_comment>//</single_comment>
	<multiline_comment_start>/*</multiline_comment_start>
	<multiline_comment_end>*/</multiline_comment_end>
	<expression_end>;</expression_end>
	<operator_keyword>operator</operator_keyword>
	<collection_keyword>collection</collection_keyword>
	<annotation_keyword>annotation</annotation_keyword>
	<float_separator>.</float_separator>
	<expression_separator>,</expression_separator>
	<implements_keyword>:</implements_keyword>
	<extends_keyword>:</extends_keyword>
	<!--
	<add>
		#if DOTNET 
			use System;
		#if JVM
			use java.lang;
			//typealias string = java.lang.String;
		#endif
	</add>
	-->
</tokens>